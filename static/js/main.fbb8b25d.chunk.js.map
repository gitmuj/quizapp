{"version":3,"sources":["api/opentdb.js","actions/index.js","components/Header.js","components/CategoryItem.js","components/Categories.js","components/QuestionBox.js","reducers/index.js","reducers/categoriesReducer.js","reducers/questionsReducer.js","reducers/questionReducer.js","reducers/answerReducer.js","reducers/nextQuestionReducer.js","reducers/updateCounterReducer.js","components/Question.js","components/App.js","index.js"],"names":["axios","create","baseURL","displayQuestions","type","payload","updateCounter","Header","style","backgroundColor","className","this","props","counter","React","Component","connect","state","isCorrectAnswer","onSubmitAnswer","CategoryItem","console","log","questions","onClick","fetchQuestions","category","id","name","categoryId","dispatch","a","opentdb","get","response","data","results","Categories","isLoading","renderedList","bind","fetchCategories","categories","map","key","length","trivia_categories","QuestionBox","handleChange","e","answer","target","value","checkbox","answers","onChange","questionString","JSON","stringify","question","questionStringEscaped","replace","_","shuffle","incorrect_answers","correct_answer","correctAnswer","classNameName","checkAnswer","nextQuestion","combineReducers","action","displayingQuestions","Question","currentQuestion","renderedQuestions","submitAnswer","indexOf","renderQuestions","class","window","location","reload","App","display","onCategorySelect","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.fbb8b25d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://opentdb.com/'\r\n \r\n});","import opentdb from '../api/opentdb';\r\n\r\nexport const submitAnswer = () =>{\r\n    return {\r\n        type: 'SUBMIT_ANSWER'\r\n    };\r\n};\r\n\r\nexport const fetchCategories =  () => {\r\n    console.log('fetching categories')\r\n    return async function(dispatch){\r\n\r\n        const response = await opentdb.get('/api_category.php');\r\n\r\n        dispatch( {type: 'FETCH_CATEGORIES', payload: response.data.trivia_categories }); //instead of return an action we call dispatch with it\r\n    } \r\n};\r\n\r\nexport const fetchQuestions = (categoryId) =>{\r\n    return async function(dispatch) {\r\n        \r\n        const response = await opentdb.get(`/api.php?amount=10&category=${categoryId}&difficulty=medium&type=multiple`);\r\n\r\n        dispatch({type: 'FETCH_QUESTIONS', payload: response.data.results});\r\n\r\n        dispatch(displayQuestions());\r\n    }\r\n};\r\n\r\nexport const displayQuestions = () =>{\r\n    return {\r\n        type: 'DISPLAY_QUESTIONS',\r\n        payload: true\r\n    };\r\n};\r\n\r\nexport const onSubmitAnswer = (answer, correctAnswer) =>{\r\n    return {\r\n       type: 'SUBMIT_ANSWER',\r\n       payload:  (answer === correctAnswer ? true : false)\r\n    }\r\n};\r\n\r\nexport const nextQuestion = () =>{\r\n    return {\r\n    type:'NEXT_QUESTION'\r\n\r\n    }\r\n};\r\n\r\nexport const updateCounter = () =>{\r\n    return {\r\n        type: 'UPDATE_COUNTER'\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {updateCounter} from '../actions'\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n\r\n    render(){\r\n\r\n        const divStyle = {\r\n            backgroundColor: '#A8DADC'\r\n        }\r\n        return(\r\n            <div style={divStyle} className=\"ui menu\">\r\n                <div className=\"header item\">\r\n                10 Questions Quiz\r\n                </div>\r\n                <a className=\"item\">\r\n                    Score: {this.props.counter} / 10\r\n                </a>\r\n           \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{isCorrectAnswer : state.onSubmitAnswer , counter : state.updateCounter}\r\n};\r\n\r\nexport default connect(mapStateToProps, {updateCounter})(Header);","import React from 'react';\r\nimport {fetchQuestions} from '../actions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass CategoryItem extends React.Component{\r\n\r\n    render(){\r\n        console.log(this.props.questions);\r\n        return(\r\n            <div className=\"item ui segment\" onClick={()=> {this.props.fetchQuestions(this.props.category.id)}} >\r\n                <div className=\"content\">\r\n                    <div className=\"header\" >\r\n                    {this.props.category.name}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {questions: state.questions}\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchQuestions})(CategoryItem);","import React from 'react';\r\nimport CategoryItem from './CategoryItem';\r\nimport {fetchCategories} from '../actions';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Categories extends React.Component{\r\n\r\n    state = { isLoading:true};\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.renderedList = this.renderedList.bind(this);\r\n    }\r\n \r\n\r\n\r\n      componentDidMount() {\r\n        console.log(\"categories mounted\")\r\n        this.props.fetchCategories();\r\n       \r\n        \r\n      }\r\n\r\n    renderedList(){\r\n      console.log(this.props.categories);\r\n      return this.props.categories.map(category => {\r\n        return(\r\n          <CategoryItem \r\n          key = {category.id} \r\n          category={category}\r\n          />\r\n        );\r\n      })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n      if (!this.props.categories.length)\r\n        return <span>Is Loading</span>;\r\n\r\n\r\n        return(\r\n          <div className=\"container\">\r\n            <div className=\"ui middle aligned selection list\">\r\n              {this.renderedList()}\r\n            </div>\r\n          </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n  return {categories: state.categories};\r\n};\r\n\r\nexport default connect(mapStateToProps, {fetchCategories})(Categories);","import React, { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { onSubmitAnswer, updateCounter } from '../actions';\r\nimport {nextQuestion} from '../actions';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\n\r\nclass QuestionBox extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        const questionString = JSON.stringify(this.props.question.question);\r\n        this.questionStringEscaped = questionString.replace(/\\\\n/g, \"\\\\n\")\r\n        .replace(/\\\\'/g, \"\\\\'\")\r\n        .replace(/\\\\\"/g, '\\\\\"')\r\n        .replace(/\\\\&/g, \"\\\\&\")\r\n        .replace(/\\\\r/g, \"\\\\r\")\r\n        .replace(/\\\\t/g, \"\\\\t\")\r\n        .replace(/\\\\b/g, \"\\\\b\")\r\n        .replace(/\\\\f/g, \"\\\\f\")\r\n        .replace(/&quot;/g,`\"`)\r\n        .replace(/&#039;/g,\"'\")\r\n        .replace(/&amp; /g,\"&\");\r\n\r\n        this.answers = _.shuffle([...this.props.question.incorrect_answers, this.props.question.correct_answer]);\r\n        \r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n         this.answer = e.target.value;\r\n        console.log(this.answer);\r\n    }\r\n\r\n\r\n\r\n    checkbox =( answers) => {\r\n\r\n            return (\r\n                \r\n                <div className=\"grouped fields\">\r\n                    { this.answers.map( answer => {\r\n                        \r\n                    return  <div className=\"field\">\r\n                            <div className=\"ui radio checkbox\">\r\n                                <input type=\"radio\" \r\n                                name=\"answer\"\r\n                                value={answer}  \r\n                                onChange={this.handleChange}\r\n                                />\r\n                                <label className=\"option\"> {answer}</label>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n\r\n            );\r\n    }\r\n\r\n\r\n   checkAnswer(answer, correctAnswer){\r\n        if(answer === correctAnswer) {\r\n            this.props.updateCounter();\r\n        }\r\n   }\r\n\r\n    render(){\r\n        console.log(this.props.question);\r\n        return (\r\n                \r\n                <div className=\"ui segment\">\r\n                    <div className=\"ui large message\">\r\n                        {`${this.questionStringEscaped}`} \r\n                    </div>\r\n                    <div className=\"ui form\">\r\n                        {this.checkbox(this.answers)}\r\n                    </div>\r\n                    {<button classNameName=\"ui primary button\" \r\n                    onClick={() => {\r\n                    this.checkAnswer(this.answer, this.props.question.correct_answer); \r\n                    this.props.nextQuestion()}} \r\n                    >Submit</button>\r\n                    // <h4>{displayQuestions}</h4>\r\n                }\r\n                    \r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    \r\n\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n    onSubmitAnswer: state.onSubmitAnswer,\r\n    nextQuestion : state.nextQuestion,\r\n    updateCounter : state.updateCounter\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onSubmitAnswer, nextQuestion, updateCounter})(QuestionBox);\r\n\r\n","import {combineReducers} from 'redux';\r\nimport categoriesReducer from './categoriesReducer';\r\nimport questionsReducer from './questionsReducer';\r\nimport questionReducer from './questionReducer';\r\nimport answerReducer from './answerReducer';\r\nimport nextQuestionReducer from './nextQuestionReducer';\r\nimport updateCounterReducer from './updateCounterReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    categories: categoriesReducer,\r\n    questions : questionsReducer,\r\n    displayingQuestions: questionReducer,\r\n    onSubmitAnswer: answerReducer,\r\n    nextQuestion: nextQuestionReducer,\r\n    updateCounter : updateCounterReducer\r\n});","export default (state = [], action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'FETCH_CATEGORIES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","export default (state = [], action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'FETCH_QUESTIONS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","\r\nexport default (state = false , action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'DISPLAY_QUESTIONS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","export default (state = null, action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'SUBMIT_ANSWER':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n","\r\nexport default (state = 0 , action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'NEXT_QUESTION':\r\n            return state + 1;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n\r\n","export default (state = 0, action) =>{ ///do mutate state in reducers because redux will not recognize it since its the same object or array being referenced.\r\n    switch(action.type){\r\n        case 'UPDATE_COUNTER':\r\n            return state + 1;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\n","import React from 'react';\r\nimport QuestionBox from './QuestionBox';\r\nimport displayingQuestions from '../reducers';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Question extends React.Component{\r\n\r\n    state = {question: null, answers: [], correctAnswer : null, currentQuestion: 0, renderedQuestions:[]};\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.submitAnswer = this.submitAnswer.bind(this);\r\n      \r\n    }\r\n\r\n    submitAnswer(answer){\r\n        this.state.currentQuestion++;\r\n        console.log(this.props.displayQuestions);\r\n        \r\n     \r\n    }\r\n\r\n   \r\n    renderQuestions(){\r\n       return  (\r\n            this.props.questions.map(question =>{\r\n                return <QuestionBox \r\n                key = {this.props.questions.indexOf(question)}\r\n                question ={question}\r\n                nextQuestion = {this.nextQuestion}\r\n                 />\r\n            }));\r\n    }    \r\n \r\n\r\n\r\n    render(){\r\n        if(this.props.nextQuestion<10){\r\n            return(\r\n \r\n                <div>{this.renderQuestions()[this.props.nextQuestion]}</div>\r\n                );\r\n        }\r\n\r\n        return (\r\n            <div className=\"ui placeholder segment\">\r\n                <h2 className=\"ui center aligned header\">End of quiz, you got {this.props.counter} questions correct!</h2>\r\n                <button class=\"ui inverted green button center aligned\" onClick={() => window.location.reload()}>Try again</button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        displayingQuestions : state.displayingQuestions,\r\n        questions: state.questions,\r\n        nextQuestion : state.nextQuestion,\r\n        counter: state.updateCounter\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {displayingQuestions}) (Question);","import React from 'react';\r\nimport Header from './Header'\r\nimport Category from './Categories';\r\nimport Question from './Question';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n    render(){\r\n        const divStyle = {\r\n            backgroundColor: '#F1FAEE',\r\n   \r\n          };\r\n          \r\n\r\n        let display;\r\n  \r\n        if (!this.props.displayingQuestions) {\r\n            console.log(this.props.displayingQuestions);\r\n            display =  <div><Category onCategorySelect = {this.onCategorySelect} displayQuestions={this.props.displayingQuestions}/></div>;\r\n        } else {\r\n            console.log('question display');\r\n\r\n            display = <Question  displayQuestions = {this.props.displayingQuestions}/>;\r\n        }\r\n   \r\n            return (\r\n                <div className=\"ui container\" >\r\n                    <Header  />\r\n                    <div style={divStyle} className =\"ui segment\">\r\n                        {display}\r\n                    </div>\r\n    \r\n                </div>\r\n                \r\n            );\r\n        \r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {displayingQuestions: state.displayingQuestions}\r\n};\r\n\r\nexport default connect(mapStateToProps) (App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport reducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\nimport './styles/App.css'\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk)); //hooks up middleware to redux store\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>, \r\ndocument.querySelector('#root'));\r\n"],"sourceRoot":""}